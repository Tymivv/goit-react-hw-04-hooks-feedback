{"version":3,"sources":["components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/SectionTitle/SectionTitle.jsx","components/App/App.jsx","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","onClick","type","SectionTitle","title","className","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAwBeA,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,aCUOC,EAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,QAAS,kBAAMH,EAAgBE,IAE/BE,KAAK,SAHP,SAKGF,GAHIA,SCCEG,EARM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OACE,mCACE,oBAAIC,UAAU,QAAd,SAAuBD,OC0DdE,EAxDH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOhB,EAAP,KAAaiB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOf,EAAP,KAAgBiB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOd,EAAP,KAAYiB,EAAZ,KAQMC,EAAqB,WACzB,OAAOpB,EAAOC,EAAUC,GAmB1B,OACE,sBAAKY,UAAU,YAAf,UACE,cAAC,EAAD,CAAcD,MAAM,0BACpB,cAAC,EAAD,CACEP,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBArBkB,SAAAD,GACtB,OAAQA,GACN,IAAK,OACHW,EAAQjB,EAAO,GACf,MACF,IAAK,UACHkB,EAAWjB,EAAU,GACrB,MACF,IAAK,MACHkB,EAAOjB,EAAM,GACb,MACF,QACE,WAWDkB,IAAuB,EACtB,+BACE,cAAC,EAAD,CAAcP,MAAM,eACpB,cAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiB,IACPhB,mBAzC8B,WACtC,IAAMD,EAAQH,EAAOC,EAAUC,EAE/B,OADemB,KAAKC,MAAOtB,EAAOG,EAAS,KAuCfoB,QAIxB,sD,MChDRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bbc76c29.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total}</li>\r\n        <li>Positive feedback: {positivePercentage}%</li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <>\r\n    {options.map(option => (\r\n      <button\r\n        onClick={() => onLeaveFeedback(option)}\r\n        key={option}\r\n        type=\"button\"\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","const SectionTitle = ({ title }) => {\r\n  return (\r\n    <>\r\n      <h2 className=\"title\">{title}</h2>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SectionTitle;\r\n","import { useState } from 'react';\nimport Statistics from '../Statistics/Statistics';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport SectionTitle from '../SectionTitle/SectionTitle';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = good + neutral + bad;\n    const total1 = Math.round((good / total) * 100);\n    return total1;\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const onLeaveFeedback = options => {\n    switch (options) {\n      case 'good':\n        setGood(good + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral + 1);\n        break;\n      case 'bad':\n        setBad(bad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div className=\"conteiner\">\n      <SectionTitle title=\"Please leave feedback\" />\n      <FeedbackOptions\n        options={['good', 'neutral', 'bad']}\n        onLeaveFeedback={onLeaveFeedback}\n      />\n      {countTotalFeedback() > 0 ? (\n        <ul>\n          <SectionTitle title=\"Statistics\" />\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        </ul>\n      ) : (\n        <p>No feetback given</p>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n///////////////////////////////////////////////////////\n\n// import { Component } from 'react';\n// import Statistics from '../Statistics/Statistics';\n// import FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\n// import SectionTitle from '../SectionTitle/SectionTitle';\n// class App extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   countPositiveFeedbackPercentage = () => {\n//     const { good, neutral, bad } = this.state;\n//     const total = good + neutral + bad;\n//     const total1 = Math.round((good / total) * 100);\n//     return total1;\n//   };\n\n//   countTotalFeedback = () => {\n//     const { good, neutral, bad } = this.state;\n//     return good + neutral + bad;\n//   };\n\n//   onLeaveFeedback = options => {\n//     this.setState(prevState => ({\n//       [options]: prevState[options] + 1,\n//     }));\n//   };\n\n//   countTotalFeedback = () => {\n//     const sum = this.state.good + this.state.neutral + this.state.bad;\n//     return sum;\n//   };\n//   render() {\n//     const { good, neutral, bad } = this.state;\n//     return (\n//       <div className=\"conteiner\">\n//         <SectionTitle title=\"Please leave feedback\" />\n//         <FeedbackOptions\n//           options={this.state}\n//           onLeaveFeedback={this.onLeaveFeedback}\n//         />\n//         {this.countTotalFeedback() > 0 ? (\n//           <ul>\n//             <SectionTitle title=\"Statistics\" />\n//             <Statistics\n//               good={good}\n//               neutral={neutral}\n//               bad={bad}\n//               total={this.countTotalFeedback()}\n//               positivePercentage={this.countPositiveFeedbackPercentage()}\n//             />\n//           </ul>\n//         ) : (\n//           <p>No feetback given</p>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App.jsx';\n//import 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}